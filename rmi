public class Client1 {
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		try {
			String ServerUrl="rmi://localhost/Server";
			ServerInterface ServerIntf=(ServerInterface) Naming.lookup(ServerUrl);
			System.out.println("Enter num1:");
			double num1=sc.nextDouble();
			System.out.println("Enter num2:");
			double num2=sc.nextDouble();
			System.out.println("Addition is"+ ServerIntf.Addition(num1,num2));
			System.out.println("Subtraction is"+ ServerIntf.Subtraction(num1,num2));
			System.out.println("Multiplication is"+ ServerIntf.Multiplication(num1,num2));
			System.out.println("Division is"+ ServerIntf.Division(num1,num2));
		}
		catch(Exception e)
		{
			System.out.println("exception occured at Client1" + e.getMessage());
		}
	}
}

public class Server1 {
	public static void main(String[] args) {
		try {
		ServerImplementation ServerImpl=new ServerImplementation();
		Naming.rebind("Server", ServerImpl);
		System.out.println("Server is ready");
	}
	catch(Exception e)
	{
		System.out.println("Exception occured at server"+e.getMessage());
	}
	}
}




public class ServerImplementation extends UnicastRemoteObject implements ServerInterface{
public ServerImplementation() throws RemoteException{
}
public double Addition(double num1, double num2)
throws RemoteException{
return num1 + num2;
}
public double Subtraction(double num1, double num2)
throws RemoteException{
return num1 - num2;
}
public double Multiplication(double num1, double num2)
throws RemoteException{
return num1 * num2;
}
public double Division(double num1, double num2)
throws RemoteException{
return num1 / num2;
}
}



interface ServerInterface extends Remote{
public double Addition(double num1, double num2)
throws RemoteException;
public double Subtraction(double num1, double num2)
throws RemoteException;
public double Division(double num1, double num2)
throws RemoteException;
public double Multiplication(double num1, double num2)
throws RemoteException;
}




